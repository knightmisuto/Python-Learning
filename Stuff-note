sub matrix in matrix:
a[rows_start:rown_end,column_start:column_end]

Open tensorboard:
tensorboard --logdir=training/ --host localhost --port 8088

Run training:
python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/faster_rcnn_inception_v2_pets.config

Export Inference Graph:
python export_inference_graph.py --input_type image_tensor --pipeline_config_path training/faster_rcnn_inception_v2_pets.config --trained_checkpoint_prefix training/model.ckpt-XXXX --output_directory inference_graph

Set Pythonpath:
set PYTHONPATH=E:\tensorflow\models;E:\tensorflow\models\research;E:\tensorflow\models\research\slim

generate the TFRecord:
python generate_tfrecord.py --csv_input=images\train_labels.csv --image_dir=images\train --output_path=train.record
python generate_tfrecord.py --csv_input=images\test_labels.csv --image_dir=images\test --output_path=test.record

Labeling image:
pyrcc5 -o libs/resources.py resources.qrc
python labelImg.py

Tensroflow object detection model zoo:
https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md

Counting_car:
https://github.com/IBM/powerai-counting-cars/blob/master/notebooks/counting_cars.ipynb

Converting Dataturks Image Bounding Box output to Pascal VOC format:
python dataturks_to_PascalVOC.py output.json image_dowload_folder pascal_voc_out_folder

Object detection:
https://github.com/EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10